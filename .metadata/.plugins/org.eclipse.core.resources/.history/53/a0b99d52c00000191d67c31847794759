package com.book.service.schedule;

import java.util.Date;
import java.util.List;

import javax.ejb.EJB;
import javax.enterprise.context.RequestScoped;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import com.book.response.ScheduleResponse;
import com.ejb.dao.ScheduleDAOLocal;
import com.entity.Team;

@RequestScoped
@Path("/schedule")
@Produces({ "application/json", "text/plain"})
@Consumes({ "application/xml", "application/json" })
public class ScheduleService {

	@EJB(name = "ScheduleDAO")
	private ScheduleDAOLocal scheduleDAO;
	
	@Path("/{id}/find")
	@GET
	@Produces({"application/json"})
	public Response findScheduleById(@QueryParam(value = "id") Long id) {
		ScheduleResponse scheduleResponse = null;
		try {
			scheduleResponse = scheduleDAO.findScheduleById(id);
		}catch(Exception e) {
			return Response.status(Status.INTERNAL_SERVER_ERROR.getStatusCode(), e.getMessage()).build();
		}
		return Response.ok(scheduleResponse).build();
		
	}
	/*
	public List<ScheduleResponse> findScheduleByDate(Date date){
		
	}
	
	public List<ScheduleResponse> findScheduleByTime(Date time);
	
	public List<ScheduleResponse> findScheduleByDateAndTime(Date date, Date time);
	
	public List<ScheduleResponse> findScheduleByHomeTeam(Team homeTeam);
	
	public List<ScheduleResponse> findScheduleByAwayTeam(Team awayTeam);
	
	public List<ScheduleResponse> findScheduleByMatchUp(Team teamOne, Team teamTwo);
	*/
}
